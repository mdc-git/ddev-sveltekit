name: ddev-viteserve

pre_install_actions:
# This item shows complex go templating possibilities based on yaml_read_files
- |
- #ddev-description:Create a hooks.server.js
  echo '/** @type {import(\'@sveltejs/kit\').Handle} */\nexport async function handle({ event, resolve }) {\n    console.log(\'src/hooks.server.js: handle()\')\n    if (process.env.IS_DDEV_PROJECT === \'true\' && event.url.host === \'node-srv\') {\n        event.url = new URL(event.url.href.replace(\'http://node-srv\', process.env.DDEV_PRIMARY_URL))\n    }\n    const response = await resolve(event);\n    return response;\n}' >hooks.server.js
  
project_files:
  - nginx_full/nginx-site.conf

post_install_actions: []

# post_install_actions:
#   - ddev exec .ddev/viteserve/build-dotenv.sh
#   - |
#     #ddev-nodisplay
#     # cd .ddev
#     if [ -f .allow-upgrade ]; then
#       if grep ask .allow-upgrade >/dev/null ; then
#         read replace
#         if [ "$replace" = "y" ]; then
#           echo "true" >.allow-upgrade
#         else
#           echo "false" >.allow-upgrade
#         fi
#       fi
#     fi
#   - |
#     #ddev-nodisplay
#     # cd .ddev
#     if [ -f .allow-upgrade ]; then
#       if grep "true" .allow-upgrade >/dev/null ; then
#         if [ -f .env ]; then
#           sed -i.bak '/^# start vite/,/^\# end vite/d;' .env
#           cat .env-frag >>.env
#           echo ".env updated to:"
#           cat .env
#         else
#           cp .env-frag .env
#         fi
#         rm .env-frag
#       fi
#     fi



